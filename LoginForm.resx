<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        rwAAA68BGB6xfQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAqCSURBVHhe7Z1f
        jF1VFcZv/2KnDmHAtjNDK2IJFVr582BSNKUVNFEJxkKMiT6YaCRaeVAKkQcISgRMFCO0mjoSE03jgxB8
        gEDgQUqnRYgawxNNn4xSSFSM/140MYe1Jpwza3/3uz33cvbZ+9y560t+yc2sj7W/s9fh3s6+vbc9l8vl
        6qRuFl4TigG8KtwguFaoXhfY4C1nBNcK1TA3gLJZcK1A1b0ElOwWXBOkxwV7A3xWcE2QvifYG+AuwTVB
        OiDYGyA3fxI+JrgSSTebDSInfxRciXSpwIaQk38LrkQ6R/i/wAaRi1cEV0Lp6241gFPPfLAoTn8kGU8u
        XGWHrzwruBLqmFAN4KlHrqaDaosj915mh6/8VHAllG54NYDD9+zoG9Jjh64oZjetX0Ifx6zfdeBiO3zl
        W4IrofR3/2oAB79wUTAgZX7zOVVdH8esf37/XFV7i1sEV0Lp6V81gP0f3RwMSLF1JWb9+mvOx/rHBVdC
        6fl/NYAr3zcdDEixdSVm/dL3TGH9/YIrofQdwGoA0xvXBANSbF2JWd+4YQ3WzxNcifUvoRrCX168NhiS
        rSm21qT+xm/3Yu0/giuDXhaqQbz46AeGGmDT+stP7MaaHwJl0q+EahC/+P6uoQbYtO6HQN3Rg0I1iG9/
        fXswwK2zy7/GbZt7R1BrUvdDoO7oVqEaxBc/PR8MUE8HdYg6vKfJSeHbrfshUHf0CaEaxId3zwQDbAs/
        BOqOdgjVIN493/803gZ+CNQddeVtYT8EyqjgbeFM+CFQRgVvC2dAP53kyqjgbeHE6LOPv/5n1t2CHYr+
        lXHXBOlzgr0B9EMjrglS8LZwJvQDqvsFVwYFbwtnxD+lnFG6+WwoKfEbIKP0SyL01zE2mBT4S0BHdFyo
        BrNv777i+WOLxeLxk8V1111vB6aod5Bi9XElVvA3hI49d7w49crpJXSAtib8QxikWH1cifWGUA1H/489
        y+D+KgxSrD6uxDopVMPRp2sd3onFk0tP47YmLAqDFKuPK7FG+d6ALwuDFKuPK7HWCi8JbFCW3wvrhEGK
        1Wdi9ElhmC9zcuKie36jkFVTwt8EFtBpH917nUE2de37eiaRrwhZtErQD0WwUE46TgurheTS1/4qyJpV
        veLIRb3i0e1OmyzIHq+VvbZ7L2T5s8BzQhVi3zQP7MRnr+y13Xvh10JSXSEEIb67lYedNA7O9oqZNcv7
        MrO2V9whPxtUHxbb58FtvUJef9FztZBMPxeqxXdtWL7ASec8Mlwd3tnqw2L76J5D/WdCEs0L/xWqxe+c
        Ww426aS6Ab4hzwZQ/5+wVWhd9wvVwnPresUv3wrlpHkJUHTPL1zf57tPaFV9Bz9f2rQcykmL7r2dhfB3
        YaPQmoKDn3eu7hVHL+bhnPY5+t5eMd3/bNLawVDfwc9NMzyYkw6dgZ2J0NrBkB/8dJCUB0N+8NNRUhwM
        +cFPh0lxMOQHPx2nzYMhP/gZA9o8GAoOfpyxIsrB0J8F1tzpPjq7xmKNnfGhsVhTZ3xorKDhqd6Os4J+
        9lVrFvSznhb0s54W9LOeFvSznhb0s54W9LOeFvSznhb0C40VNGSLWtDPLsqCftbTgn7W04J+1tOCftbT
        gn7W04J+1tOCftbTgn6hsYKGbFEL+tlFWdDPelrQz3pa0M96WtDPelrQz3pa0M96WtDPelrQLzRW0JAt
        akE/uygL+llPC/pZTwv6WU8L+llPC/pZTwv6WU8L+llPC/qFxgoaskUt6GcXZUE/62lBP+tpQT/raUE/
        62lBP+tpQT/raUE/62lBv9BYQUO2qAX97KIs6Gc9LehnPS3oZz0t6Gc9LehnPS3oZz0t6Gc9LegXGito
        yBa1oJ9dlAX9rKcF/aynBf2spwX9rKcF/aynBf2spwX9rKcF/UJjBQ3Zohb0s4uyoJ/1tKCf9bSgn/W0
        oJ/1tKCf9bSgn/W0oJ/1tKBfaKygIVvUgn52URb0s54W9LOeFvSznhb0s54W9LOeFvSznhb0s54W9AuN
        FXxnzvHedrqw8rzUrFc5c2IPvTDl1cU9fX7vH7V/lO8w+oNQNT3Y20QXV26TmvUq37n9EnpxygMHL+nz
        e/+o/X8nNNa9QtV0XW/VUgh7J+pj/ZnWrFdZv2710kXaO10f68+0hn7vH7X/PUJjbRL+KWBzp9vo0/+7
        hCi6SRjln2dRr/sHk8L/KSGq9CbQu4otWHHu9LnFww8dKg4d+mExPT1NPRb1HD78I/cPoPQ/9IOHh/IL
        OqPWvrpWn1K+KegfLoLfDkpOnnih+mLF37zwUvHVA7cWl1++s5iaWv4Xt/Xxzp27lmrqcf9wft3b0gPo
        LHQmOpsLhKQKwpRhnXbA/RayKwjEQjvxwP0WsisIxEI78cD9FrIrCMRCO/HA/RayKwjEQjvxwP0WsisI
        xEI78cD9FrIrCMRCK0eOLBRbtmwJvCmYnZ0tFn78SGfy1DEobwn5b7IrCMRCK3ph6E3F3Oxcp/LUwfKW
        EH92BYFYaAV9qelanjowbwnxZlcQiIVW0JearuWpA/OWEG92BYFYaAV9nzlatAqulztPHZgH85agT8iu
        IBALraCPbUJMcL3ceerAPJi3BH1CdgWBWGgFfWwTYoLr5c5TB+bBvCXoE7IrCMRCK+hjmxATXC93njow
        D+YtQZ+QXUEgFlpBH9uEmOB6ufPUgXkwbwn6hOwKArHQCvrYJsQE18udpw7Mg3lL0CdkVxCIhVbQxzYh
        Jrhe7jx1YB7MW4I+IbuCQCy0gj62CTHB9XLnqQPzYN4S9AnZFQRioRX0sU2ICa6XO08dmAfzlqBPyK4g
        EAutoI9tQkxwvdx56sA8mLcEfUJ2BYFYaAV9bBNGYc/tTxYbZi4sps7fWlx7x1N9dVyv7TxNwTyYtwR9
        QnYFgVhoBX1sE0ZBB1/2mrpgW1/drqW0nacpmAfzlqBPyK4gEAutoI9twijU9cN623magnkwbwn6hOwK
        ArHQCvrYJoxCXT+st52nKZgH85agT8iuIBALraCPbcIo1PXDett5moJ5MG8J+oTsCgKx0Ar62CaMQl0/
        rLedpymYB/OWoE/IriAQC62gj23CKGyYma966WOs27WUtvM0BfNg3hL0CdkVBGKhFfSxTRiFD33t8aXB
        K/oY67he23magnkwbwn6hOwKArHQCvrYJsQE16vL0zUwbwnxZlcQiIVW0MeGFhNcry5P18C8JcSbXUEg
        FlpBHxtaTHA9zON/LTyegkAstII+NrSY4HqYRz980cWbQIf/k4UV+MEQ9LGhxQTXY5nGEbwuIbuCQCy0
        gj42tJjgeizTOILXJWRXEIiFVtDHhhYTXI9lGkfwuoTsCgKx0Ar62NBiguuxTOMIXpeQXUEgFlpBHxta
        THA9lmkcwesSsisIxEIr6GNDiwmuxzKNI3hdQnYFgVhoBX1saDHB9VimcQSvS8iuIBALraCPDS0muB7L
        NI7gdQnZFQRioRX0saHFBNdjmcYRvC4hu4JALLSCPja0mOB6LNM4gtclRNPNwmsCW8QZH84I9ruCca5Y
        r/S6YBs544sOuRSbq61X8htg5fC2bgB/CVgZ4FP80C8BLpdrstTrvQkebn4mt7mKBwAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>